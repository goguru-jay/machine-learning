# File 09_linear_reg.py

import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression 
from sklearn.metrics import r2_score
import matplotlib.pyplot as plt  
from sklearn.metrics import mean_squared_error

df_train = pd.read_csv('dataset/train.csv')
df_test = pd.read_csv('dataset/test.csv')

x_train = df_train['x']     
y_train = df_train['y']     
x_test = df_test['x']      
y_test = df_test['y']       

x_train = np.array(x_train)     # shape (700, )
y_train = np.array(y_train)     # shape (700, )
x_test = np.array(x_test)       # shape (300, )
y_test = np.array(y_test)       # shape (300, )

print(f'Shapes (Before reshapping): x_train = {x_train.shape}\n\nx_test = {x_test.shape}\n\ny_train = {y_train.shape}\n\ny_test = {y_test.shape}\n')

x_train = x_train.reshape(-1,1) # shape (700, 1)
x_test = x_test.reshape(-1,1)   # shape (300, 1)

print(f'Shapes (After reshapping): x_train = {x_train.shape}\n\nx_test = {x_test.shape}\n\ny_train = {y_train.shape}\n\ny_test = {y_test.shape}\n')

#print(f'x_train = \n{x_train}\n\nx_test = \n{x_test}\n\ny_train = \n{y_train}\n\ny_test = \n{y_test}\n\n')

clf = LinearRegression(normalize=True)
clf.fit(x_train,y_train)
y_pred = clf.predict(x_test)

# Calculating Mean Squared Error (MSE)
print('MSE is: ', mean_squared_error(y_test,y_pred))

print('R2 score is: ', r2_score(y_test,y_pred))

#To retrieve the intercept:
print('Intercept: ', clf.intercept_)

#For retrieving the slope:
print('Coefficients: ', clf.coef_)

print(f'The equation is y = {clf.coef_} * x   +  {clf.intercept_}')

plt.scatter(x_test, y_test,  color='gray')
plt.plot(x_test, y_pred, color='red', linewidth=2)
plt.xlabel('x-axis')
plt.ylabel('y-axis')
plt.show()

